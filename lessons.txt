# python_test
 

pip install virtualenv 

cd / корень проекта

создание вирутального окружения
virtualenv env 

активация  
env\Scripts\activate

установка в виртуальное окружение
pip install seleninum
pip install pytest

обновление chromedriver 
https://sites.google.com/a/chromium.org/chromedriver/downloads

переключение тест раннера
settings > tools > Python Integreted Tools > Default Test Runner

self параметр метода, - объект в котором этот метод вызван

команды уровня драйвера webdriver ui
find_element_by()
find_elements_by()
click()
clear()
send_keys()

text
get_attribute()
is_displayed()
location
size

В тестах надо явно задавать параметры, чтобы ситуация полностью контролировалась. Вспомагательные методы должны быть универсальными.

Вместо того, чтобы передать несколько параметров, нужно передавать объект (сгруппированные параметры).

Фикстура (оснастка, фиксатор, в котором "зажимаем" тестируемую систему).

В начале производится инициализация. На этом этапе создается фикстура.
Примеры фикстур:
- браузер, управляемый драйвером
- соединение с базой данных.

В pytest предполагается, что фикстура - это самостоятельный объект. Можно написать функцию, которая создает этот объект. 

@pytest.fixture
def app(request):
    fixture = Application()
    request.addfinalizer(fixture.destroy)
    return fixture

pytest непосредственно запускает тестовые функции (создания тестовых классов необязательно)

Когда pytest видит, что у тестового метода есть параметр, он пытается найти функцию, которая создает объект- фикстуру. Этот объект передается как параметр в тестовый метод.

Для разрушения фикстуры в функцию инициализации передается параметр request, у которого есть метод addfinalizer(). В него нужно передать функцию, которая вызывает разрушение.
 
Драйвер инициализируется один раз, при создании фикстуры. Нужно передать эту информацию в помощник.

Принцип разделения ответственности (декомпозиция: одна сущность - одна роль).

Фикстура, которая должна быть общая для всех тестов, помещается в отдельный файл conftest.

Для того, чтобы использовать браузер для запуска всех тестов нужно указать свойство в метке 
@pytest.fixtura(scope="session")

В качестве дефолтного значения указывается None (т.е. поле не проинициализировано)

---
Обеспечение проверки предусловий 

интелектуальная фикстура 

Следует избегать дублирования кода - повторение логина и логаута в каждом тесте. Для этого нужно перенести в фикстуру функцию логина и логаута (добавить действие в finalizer).

Все тесты выполняются в одном и том же бразузере и одной и той же сессии (оптимизация по скорости).

Если во время выполнения набора тестов бразузер падает (или тест его случайно закрывает), последующие тесты упадут. 

Нужно добавить валидацию фикстуры перед каждым тестом. Затем для финализации сделать отдельную функцию, которая должна выполняться автоматически в самом конце (даже если нигде в явном виде не вызвается).

Тестам требуется авторизованная сессия, поэтому следует добавить проверку предусловий в логин и логаут.

---
lesson14

Может возникнуть проблема при выполнении теста удаления группы, если в списке нет ни одной группы.
Способы решения:
1) упорядочевание тестов (оптимизация)
2) добавить проверку предусловия в тест (становятся независимыми и устойчивыми)

Но добавить проверку в метод delete_first_group() вместо теста нельзя.

Фикстура должна оставаться пассивной и автоматически не делать ничего такого, что может исказить результаты тестирования.
Если сказано удалить первую группу, то должна удалить или сообщить об ошибке.
Вся логика должна быть сосредоточена в тестовых функциях или в функциях, которые создают фикстуру. Потому что для разных тестов может потребоваться разные предусловия.

Выполнение предусловий зона ответственности тестов. Каждый тест обеспечивает те предусловия, которые нужны ему.    


